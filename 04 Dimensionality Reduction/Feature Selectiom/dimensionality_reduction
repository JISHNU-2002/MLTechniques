{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1smz1K_WGVWEeoBwS5UAPExG0BknseAWx","authorship_tag":"ABX9TyOnLt+IrYeosaeQM/WBahJk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Dimensionality Reduction - Feature Selection**"],"metadata":{"id":"SS2gA5tPe7mp"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"12HuMh1KdZnU"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ySdAUX4WdsIS","executionInfo":{"status":"ok","timestamp":1723564833508,"user_tz":-330,"elapsed":21183,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"51c3487d-33fd-43bd-cba7-e78bdce34f23"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["# Mobile Price Classification"],"metadata":{"id":"fp81n-L6fHD2"}},{"cell_type":"code","source":["data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Machine-Learning-Essentials/03 Dimensionality Reduction /Feature Selection/train.csv')"],"metadata":{"id":"ViHaChMEd-VT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cFYijd3MeKmT","executionInfo":{"status":"ok","timestamp":1723564871187,"user_tz":-330,"elapsed":471,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"2fe34f6f-afa6-4516-fc22-cb6b1d3f743d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2000, 21)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"id":"Xfx798DYeMjH","executionInfo":{"status":"ok","timestamp":1723564879673,"user_tz":-330,"elapsed":637,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"b9521077-81ee-4134-dd73-63a8f442a349"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n","0            842     0          2.2         0   1       0           7    0.6   \n","1           1021     1          0.5         1   0       1          53    0.7   \n","2            563     1          0.5         1   2       1          41    0.9   \n","3            615     1          2.5         0   0       0          10    0.8   \n","4           1821     1          1.2         0  13       1          44    0.6   \n","\n","   mobile_wt  n_cores  ...  px_height  px_width   ram  sc_h  sc_w  talk_time  \\\n","0        188        2  ...         20       756  2549     9     7         19   \n","1        136        3  ...        905      1988  2631    17     3          7   \n","2        145        5  ...       1263      1716  2603    11     2          9   \n","3        131        6  ...       1216      1786  2769    16     8         11   \n","4        141        2  ...       1208      1212  1411     8     2         15   \n","\n","   three_g  touch_screen  wifi  price_range  \n","0        0             0     1            1  \n","1        1             1     0            2  \n","2        1             1     0            2  \n","3        1             0     0            2  \n","4        1             1     0            1  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-31bbcf93-30af-4b8c-ad08-260171d98992\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>battery_power</th>\n","      <th>blue</th>\n","      <th>clock_speed</th>\n","      <th>dual_sim</th>\n","      <th>fc</th>\n","      <th>four_g</th>\n","      <th>int_memory</th>\n","      <th>m_dep</th>\n","      <th>mobile_wt</th>\n","      <th>n_cores</th>\n","      <th>...</th>\n","      <th>px_height</th>\n","      <th>px_width</th>\n","      <th>ram</th>\n","      <th>sc_h</th>\n","      <th>sc_w</th>\n","      <th>talk_time</th>\n","      <th>three_g</th>\n","      <th>touch_screen</th>\n","      <th>wifi</th>\n","      <th>price_range</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>842</td>\n","      <td>0</td>\n","      <td>2.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>0.6</td>\n","      <td>188</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>20</td>\n","      <td>756</td>\n","      <td>2549</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1021</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>53</td>\n","      <td>0.7</td>\n","      <td>136</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>905</td>\n","      <td>1988</td>\n","      <td>2631</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>563</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>41</td>\n","      <td>0.9</td>\n","      <td>145</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>1263</td>\n","      <td>1716</td>\n","      <td>2603</td>\n","      <td>11</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>615</td>\n","      <td>1</td>\n","      <td>2.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0.8</td>\n","      <td>131</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>1216</td>\n","      <td>1786</td>\n","      <td>2769</td>\n","      <td>16</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1821</td>\n","      <td>1</td>\n","      <td>1.2</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>44</td>\n","      <td>0.6</td>\n","      <td>141</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>1208</td>\n","      <td>1212</td>\n","      <td>1411</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-31bbcf93-30af-4b8c-ad08-260171d98992')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-31bbcf93-30af-4b8c-ad08-260171d98992 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-31bbcf93-30af-4b8c-ad08-260171d98992');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f3e58b9e-9acf-412f-91cb-690549c64df9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3e58b9e-9acf-412f-91cb-690549c64df9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f3e58b9e-9acf-412f-91cb-690549c64df9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["X = data.iloc[:, :-1]\n","y = data.iloc[:, -1]"],"metadata":{"id":"IdqhSxYAeOlG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":459},"id":"rdRUU-pnfzQB","executionInfo":{"status":"ok","timestamp":1723565293305,"user_tz":-330,"elapsed":7,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"b655fcf1-e2e1-419c-c139-e759fecc4c02"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       1\n","1       2\n","2       2\n","3       2\n","4       1\n","       ..\n","1995    0\n","1996    2\n","1997    3\n","1998    0\n","1999    3\n","Name: price_range, Length: 2000, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price_range</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["print(X.shape, y.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GJpdJl_xfmgn","executionInfo":{"status":"ok","timestamp":1723565325922,"user_tz":-330,"elapsed":462,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"f96c7a86-f0b3-4426-b3b5-1f954df16598"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(2000, 20) (2000,)\n"]}]},{"cell_type":"code","source":["def normalize(X):\n","  m = X.mean(axis=0)\n","  s = X.std(axis=0)\n","  X = (X-m)/s\n","  return X"],"metadata":{"id":"Fv85pyK_f7cA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["normalize(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"34FM_44LgQEM","executionInfo":{"status":"ok","timestamp":1723565430856,"user_tz":-330,"elapsed":15,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"c8d7b118-1cff-478f-9269-45cacabb1221"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      battery_power      blue  clock_speed  dual_sim        fc    four_g  \\\n","0         -0.902372 -0.989802     0.830572 -1.018929 -0.762304 -1.043705   \n","1         -0.495015  1.009798    -1.252751  0.980932 -0.992642  0.957646   \n","2         -1.537302  1.009798    -1.252751  0.980932 -0.531966  0.957646   \n","3         -1.418964  1.009798     1.198217 -1.018929 -0.992642 -1.043705   \n","4          1.325574  1.009798    -0.394912 -1.018929  2.001753  0.957646   \n","...             ...       ...          ...       ...       ...       ...   \n","1995      -1.011607  1.009798    -1.252751  0.980932 -0.992642  0.957646   \n","1996       1.653280  1.009798     1.320765  0.980932 -0.992642 -1.043705   \n","1997       1.530391 -0.989802    -0.762557  0.980932 -0.762304  0.957646   \n","1998       0.622372 -0.989802    -0.762557 -1.018929 -0.071290  0.957646   \n","1999      -1.657916  1.009798     0.585475  0.980932  0.159048  0.957646   \n","\n","      int_memory     m_dep  mobile_wt   n_cores        pc  px_height  \\\n","0      -1.380298  0.340654   1.348911 -1.101696 -1.305424  -1.408596   \n","1       1.154735  0.687376  -0.120029 -0.664602 -0.645827   0.585631   \n","2       0.493422  1.380820   0.134210  0.209587 -0.645827   1.392336   \n","3      -1.214970  1.034098  -0.261274  0.646681 -0.151130   1.286428   \n","4       0.658751  0.340654   0.021215 -1.101696  0.673365   1.268401   \n","...          ...       ...        ...       ...       ...        ...   \n","1995   -1.655845  1.034098  -0.967495  0.646681  0.673365   1.299948   \n","1996    0.383203 -1.046233   1.320663 -0.227507 -1.140525   0.608165   \n","1997    0.217875  0.687376  -0.910998  1.520869 -1.140525   0.502257   \n","1998    0.768969 -1.392955   0.134210  0.209587 -0.810726  -0.696533   \n","1999    0.713860  1.380820   0.783934  0.646681  1.003164  -0.365288   \n","\n","      px_width       ram      sc_h      sc_w  talk_time   three_g  \\\n","0    -1.146497  0.391605 -0.784787  0.283032   1.462128 -1.786414   \n","1     1.704039  0.467200  1.113987 -0.635158  -0.734084  0.559501   \n","2     1.074699  0.441387 -0.310094 -0.864705  -0.368048  0.559501   \n","3     1.236662  0.594421  0.876640  0.512579  -0.002013  0.559501   \n","4    -0.091429 -0.657502 -1.022134 -0.864705   0.730057  0.559501   \n","...        ...       ...       ...       ...        ...       ...   \n","1995  1.477291 -1.342463  0.164600 -0.405610   1.462128  0.559501   \n","1996  1.650822 -0.085010 -0.310094  0.971674   0.913075  0.559501   \n","1997  0.880345  0.859924 -0.784787 -1.094253  -1.100119  0.559501   \n","1998 -1.345480 -1.157164  1.351334  0.971674   1.462128  0.559501   \n","1999 -1.151125  1.654590  1.588680 -0.405610  -1.649172  0.559501   \n","\n","      touch_screen      wifi  \n","0        -1.005767  0.985850  \n","1         0.993769 -1.013846  \n","2         0.993769 -1.013846  \n","3        -1.005767 -1.013846  \n","4         0.993769 -1.013846  \n","...            ...       ...  \n","1995      0.993769 -1.013846  \n","1996      0.993769  0.985850  \n","1997      0.993769 -1.013846  \n","1998      0.993769  0.985850  \n","1999      0.993769  0.985850  \n","\n","[2000 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-ecac322a-e5c6-42b7-878c-dcf5be043112\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>battery_power</th>\n","      <th>blue</th>\n","      <th>clock_speed</th>\n","      <th>dual_sim</th>\n","      <th>fc</th>\n","      <th>four_g</th>\n","      <th>int_memory</th>\n","      <th>m_dep</th>\n","      <th>mobile_wt</th>\n","      <th>n_cores</th>\n","      <th>pc</th>\n","      <th>px_height</th>\n","      <th>px_width</th>\n","      <th>ram</th>\n","      <th>sc_h</th>\n","      <th>sc_w</th>\n","      <th>talk_time</th>\n","      <th>three_g</th>\n","      <th>touch_screen</th>\n","      <th>wifi</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.902372</td>\n","      <td>-0.989802</td>\n","      <td>0.830572</td>\n","      <td>-1.018929</td>\n","      <td>-0.762304</td>\n","      <td>-1.043705</td>\n","      <td>-1.380298</td>\n","      <td>0.340654</td>\n","      <td>1.348911</td>\n","      <td>-1.101696</td>\n","      <td>-1.305424</td>\n","      <td>-1.408596</td>\n","      <td>-1.146497</td>\n","      <td>0.391605</td>\n","      <td>-0.784787</td>\n","      <td>0.283032</td>\n","      <td>1.462128</td>\n","      <td>-1.786414</td>\n","      <td>-1.005767</td>\n","      <td>0.985850</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-0.495015</td>\n","      <td>1.009798</td>\n","      <td>-1.252751</td>\n","      <td>0.980932</td>\n","      <td>-0.992642</td>\n","      <td>0.957646</td>\n","      <td>1.154735</td>\n","      <td>0.687376</td>\n","      <td>-0.120029</td>\n","      <td>-0.664602</td>\n","      <td>-0.645827</td>\n","      <td>0.585631</td>\n","      <td>1.704039</td>\n","      <td>0.467200</td>\n","      <td>1.113987</td>\n","      <td>-0.635158</td>\n","      <td>-0.734084</td>\n","      <td>0.559501</td>\n","      <td>0.993769</td>\n","      <td>-1.013846</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-1.537302</td>\n","      <td>1.009798</td>\n","      <td>-1.252751</td>\n","      <td>0.980932</td>\n","      <td>-0.531966</td>\n","      <td>0.957646</td>\n","      <td>0.493422</td>\n","      <td>1.380820</td>\n","      <td>0.134210</td>\n","      <td>0.209587</td>\n","      <td>-0.645827</td>\n","      <td>1.392336</td>\n","      <td>1.074699</td>\n","      <td>0.441387</td>\n","      <td>-0.310094</td>\n","      <td>-0.864705</td>\n","      <td>-0.368048</td>\n","      <td>0.559501</td>\n","      <td>0.993769</td>\n","      <td>-1.013846</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-1.418964</td>\n","      <td>1.009798</td>\n","      <td>1.198217</td>\n","      <td>-1.018929</td>\n","      <td>-0.992642</td>\n","      <td>-1.043705</td>\n","      <td>-1.214970</td>\n","      <td>1.034098</td>\n","      <td>-0.261274</td>\n","      <td>0.646681</td>\n","      <td>-0.151130</td>\n","      <td>1.286428</td>\n","      <td>1.236662</td>\n","      <td>0.594421</td>\n","      <td>0.876640</td>\n","      <td>0.512579</td>\n","      <td>-0.002013</td>\n","      <td>0.559501</td>\n","      <td>-1.005767</td>\n","      <td>-1.013846</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.325574</td>\n","      <td>1.009798</td>\n","      <td>-0.394912</td>\n","      <td>-1.018929</td>\n","      <td>2.001753</td>\n","      <td>0.957646</td>\n","      <td>0.658751</td>\n","      <td>0.340654</td>\n","      <td>0.021215</td>\n","      <td>-1.101696</td>\n","      <td>0.673365</td>\n","      <td>1.268401</td>\n","      <td>-0.091429</td>\n","      <td>-0.657502</td>\n","      <td>-1.022134</td>\n","      <td>-0.864705</td>\n","      <td>0.730057</td>\n","      <td>0.559501</td>\n","      <td>0.993769</td>\n","      <td>-1.013846</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>-1.011607</td>\n","      <td>1.009798</td>\n","      <td>-1.252751</td>\n","      <td>0.980932</td>\n","      <td>-0.992642</td>\n","      <td>0.957646</td>\n","      <td>-1.655845</td>\n","      <td>1.034098</td>\n","      <td>-0.967495</td>\n","      <td>0.646681</td>\n","      <td>0.673365</td>\n","      <td>1.299948</td>\n","      <td>1.477291</td>\n","      <td>-1.342463</td>\n","      <td>0.164600</td>\n","      <td>-0.405610</td>\n","      <td>1.462128</td>\n","      <td>0.559501</td>\n","      <td>0.993769</td>\n","      <td>-1.013846</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>1.653280</td>\n","      <td>1.009798</td>\n","      <td>1.320765</td>\n","      <td>0.980932</td>\n","      <td>-0.992642</td>\n","      <td>-1.043705</td>\n","      <td>0.383203</td>\n","      <td>-1.046233</td>\n","      <td>1.320663</td>\n","      <td>-0.227507</td>\n","      <td>-1.140525</td>\n","      <td>0.608165</td>\n","      <td>1.650822</td>\n","      <td>-0.085010</td>\n","      <td>-0.310094</td>\n","      <td>0.971674</td>\n","      <td>0.913075</td>\n","      <td>0.559501</td>\n","      <td>0.993769</td>\n","      <td>0.985850</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>1.530391</td>\n","      <td>-0.989802</td>\n","      <td>-0.762557</td>\n","      <td>0.980932</td>\n","      <td>-0.762304</td>\n","      <td>0.957646</td>\n","      <td>0.217875</td>\n","      <td>0.687376</td>\n","      <td>-0.910998</td>\n","      <td>1.520869</td>\n","      <td>-1.140525</td>\n","      <td>0.502257</td>\n","      <td>0.880345</td>\n","      <td>0.859924</td>\n","      <td>-0.784787</td>\n","      <td>-1.094253</td>\n","      <td>-1.100119</td>\n","      <td>0.559501</td>\n","      <td>0.993769</td>\n","      <td>-1.013846</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>0.622372</td>\n","      <td>-0.989802</td>\n","      <td>-0.762557</td>\n","      <td>-1.018929</td>\n","      <td>-0.071290</td>\n","      <td>0.957646</td>\n","      <td>0.768969</td>\n","      <td>-1.392955</td>\n","      <td>0.134210</td>\n","      <td>0.209587</td>\n","      <td>-0.810726</td>\n","      <td>-0.696533</td>\n","      <td>-1.345480</td>\n","      <td>-1.157164</td>\n","      <td>1.351334</td>\n","      <td>0.971674</td>\n","      <td>1.462128</td>\n","      <td>0.559501</td>\n","      <td>0.993769</td>\n","      <td>0.985850</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>-1.657916</td>\n","      <td>1.009798</td>\n","      <td>0.585475</td>\n","      <td>0.980932</td>\n","      <td>0.159048</td>\n","      <td>0.957646</td>\n","      <td>0.713860</td>\n","      <td>1.380820</td>\n","      <td>0.783934</td>\n","      <td>0.646681</td>\n","      <td>1.003164</td>\n","      <td>-0.365288</td>\n","      <td>-1.151125</td>\n","      <td>1.654590</td>\n","      <td>1.588680</td>\n","      <td>-0.405610</td>\n","      <td>-1.649172</td>\n","      <td>0.559501</td>\n","      <td>0.993769</td>\n","      <td>0.985850</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows Ã— 20 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ecac322a-e5c6-42b7-878c-dcf5be043112')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ecac322a-e5c6-42b7-878c-dcf5be043112 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ecac322a-e5c6-42b7-878c-dcf5be043112');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d5cb2b35-c92f-4200-86ca-3b9cc9771cd5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5cb2b35-c92f-4200-86ca-3b9cc9771cd5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d5cb2b35-c92f-4200-86ca-3b9cc9771cd5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"normalize(X)\",\n  \"rows\": 2000,\n  \"fields\": [\n    {\n      \"column\": \"battery_power\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.6783976853699163,\n        \"max\": 1.7283796836028824,\n        \"num_unique_values\": 1094,\n        \"samples\": [\n          -1.4826843562238503,\n          1.3096441886857182,\n          1.1048279139979746\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"blue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9999999999999999,\n        \"min\": -0.989801960390097,\n        \"max\": 1.009797959589897,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.009797959589897,\n          -0.989801960390097\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clock_speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.2527508913026362,\n        \"max\": 1.8109587964025144,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          0.7080233088286603,\n          -0.27236379123698795\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dual_sim\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9999999999999998,\n        \"min\": -1.0189291514616052,\n        \"max\": 0.9809317935071981,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.9809317935071981,\n          -1.0189291514616052\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000000000000002,\n        \"min\": -0.9926421370773885,\n        \"max\": 3.383782182326343,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          -0.7623040150035079,\n          2.923105938178582\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"four_g\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.0437045687119804,\n        \"max\": 0.9576464738805037,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.9576464738805037,\n          -1.0437045687119804\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"int_memory\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.6558454750430351,\n        \"max\": 1.7609391571992616,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          -0.22300030668336226,\n          1.3200637207809007\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"m_dep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.3929554093890968,\n        \"max\": 1.727542085197554,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          -0.35278957786021303,\n          0.6873762536686703\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mobile_wt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.7019657444781164,\n        \"max\": 1.687897810724028,\n        \"num_unique_values\": 121,\n        \"samples\": [\n          0.21895693680309863,\n          -0.17652714463715152\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"n_cores\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.5387898848882602,\n        \"max\": 1.5208690255556598,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -0.6646016247614258,\n          1.5208690255556598\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.6352218009634045,\n        \"max\": 1.6627599485720257,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          -1.3054236260098615,\n          1.4978608610952542\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"px_height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.4536635751052633,\n        \"max\": 2.9629311767910336,\n        \"num_unique_values\": 1137,\n        \"samples\": [\n          -0.6244253767900402,\n          1.5388047057714114\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"px_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9999999999999999,\n        \"min\": -1.7388164314178505,\n        \"max\": 1.7271759722836568,\n        \"num_unique_values\": 1109,\n        \"samples\": [\n          0.42916413084404026,\n          -1.6231291015212714\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ram\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0,\n        \"min\": -1.7222806415699257,\n        \"max\": 1.7274192378092785,\n        \"num_unique_values\": 1562,\n        \"samples\": [\n          0.18141531003832034,\n          -1.1525546860765135\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sc_h\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9999999999999999,\n        \"min\": -1.7341740137222987,\n        \"max\": 1.5886804572435786,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          1.3513337093174447,\n          -0.5474402740916283\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sc_w\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9999999999999999,\n        \"min\": -1.3238001949792197,\n        \"max\": 2.80805406366929,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.28303201671742284,\n          0.9716743931588411\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"talk_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9999999999999999,\n        \"min\": -1.6491716483479064,\n        \"max\": 1.6451452610142419,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          1.462127654938567,\n          -0.1850307997425072\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"three_g\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9999999999999998,\n        \"min\": -1.7864141964678064,\n        \"max\": 0.5595007036868969,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.5595007036868969,\n          -1.7864141964678064\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"touch_screen\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000000000000002,\n        \"min\": -1.0057665725158806,\n        \"max\": 0.9937693569391504,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.9937693569391504,\n          -1.0057665725158806\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wifi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000000000000002,\n        \"min\": -1.013845830064887,\n        \"max\": 0.9858500872228584,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -1.013845830064887,\n          0.9858500872228584\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["from sklearn.feature_selection import SelectKBest"],"metadata":{"id":"B3cS1gEqgSrf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["best_features = SelectKBest()"],"metadata":{"id":"YncwwZzXgbCr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fit = best_features.fit(X,y)"],"metadata":{"id":"pIuT483kgt7O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"w-Z6kbz_g4ZJ","executionInfo":{"status":"ok","timestamp":1723565583627,"user_tz":-330,"elapsed":10,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"3e29488a-3b54-4f31-cd2e-e2845fcc3288"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SelectKBest()"],"text/html":["<style>#sk-container-id-1 {color: black;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SelectKBest()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SelectKBest</label><div class=\"sk-toggleable__content\"><pre>SelectKBest()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["fit.scores_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0FsR27awg6gF","executionInfo":{"status":"ok","timestamp":1723565596977,"user_tz":-330,"elapsed":441,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"a0407538-a5ef-44ff-d325-6dde3aed1a1c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([3.15981575e+01, 4.76767709e-01, 4.93707801e-01, 4.28239286e-01,\n","       7.72181960e-01, 1.05952453e+00, 2.92299608e+00, 1.50068244e+00,\n","       3.59431819e+00, 2.62541515e+00, 8.25446358e-01, 1.94848418e+01,\n","       2.26208825e+01, 3.52011082e+03, 2.22598374e+00, 1.67099983e+00,\n","       1.62881131e+00, 4.57319750e-01, 1.29330223e+00, 2.84940470e-01])"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["dfscores = pd.DataFrame(fit.scores_)\n","dfcolumns = pd.DataFrame(X.columns)\n","featureScores = pd.concat([dfcolumns, dfscores], axis=1)\n","featureScores.columns = ['Features', 'Scores']"],"metadata":{"id":"9SVSShKwg8jl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["featureScores = featureScores.sort_values(by='Scores', ascending=False)\n","featureScores"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"q7K7DlSiig1t","executionInfo":{"status":"ok","timestamp":1723567380108,"user_tz":-330,"elapsed":8,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"f3840ffc-84ae-456a-a422-00d50eb67250"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Features       Scores\n","13            ram  3520.110824\n","0   battery_power    31.598158\n","12       px_width    22.620882\n","11      px_height    19.484842\n","8       mobile_wt     3.594318\n","6      int_memory     2.922996\n","9         n_cores     2.625415\n","14           sc_h     2.225984\n","15           sc_w     1.671000\n","16      talk_time     1.628811\n","7           m_dep     1.500682\n","18   touch_screen     1.293302\n","5          four_g     1.059525\n","10             pc     0.825446\n","4              fc     0.772182\n","2     clock_speed     0.493708\n","1            blue     0.476768\n","17        three_g     0.457320\n","3        dual_sim     0.428239\n","19           wifi     0.284940"],"text/html":["\n","  <div id=\"df-24594cbb-dc56-4170-b09a-4538dbca179c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Features</th>\n","      <th>Scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>13</th>\n","      <td>ram</td>\n","      <td>3520.110824</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>battery_power</td>\n","      <td>31.598158</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>px_width</td>\n","      <td>22.620882</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>px_height</td>\n","      <td>19.484842</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>mobile_wt</td>\n","      <td>3.594318</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>int_memory</td>\n","      <td>2.922996</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>n_cores</td>\n","      <td>2.625415</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>sc_h</td>\n","      <td>2.225984</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>sc_w</td>\n","      <td>1.671000</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>talk_time</td>\n","      <td>1.628811</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>m_dep</td>\n","      <td>1.500682</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>touch_screen</td>\n","      <td>1.293302</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>four_g</td>\n","      <td>1.059525</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>pc</td>\n","      <td>0.825446</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>fc</td>\n","      <td>0.772182</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>clock_speed</td>\n","      <td>0.493708</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>blue</td>\n","      <td>0.476768</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>three_g</td>\n","      <td>0.457320</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>dual_sim</td>\n","      <td>0.428239</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>wifi</td>\n","      <td>0.284940</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24594cbb-dc56-4170-b09a-4538dbca179c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24594cbb-dc56-4170-b09a-4538dbca179c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24594cbb-dc56-4170-b09a-4538dbca179c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4a5a0786-d1fc-4bea-939c-fe249786f446\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a5a0786-d1fc-4bea-939c-fe249786f446')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4a5a0786-d1fc-4bea-939c-fe249786f446 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f3e976d3-3eb1-447a-bff7-cce2fc32d747\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('featureScores')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f3e976d3-3eb1-447a-bff7-cce2fc32d747 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('featureScores');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"featureScores","summary":"{\n  \"name\": \"featureScores\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"Features\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"ram\",\n          \"three_g\",\n          \"clock_speed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scores\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 786.0399079558911,\n        \"min\": 0.2849404695197208,\n        \"max\": 3520.1108238957568,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          3520.1108238957568,\n          0.4573197497054951,\n          0.49370780102845274\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["top_10 = list(featureScores[:10]['Features'].values)\n","top_10"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7QVFLVrjilxI","executionInfo":{"status":"ok","timestamp":1723567546876,"user_tz":-330,"elapsed":506,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"6c53f9ff-b1f5-48f7-8bd5-3dec36846105"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['ram',\n"," 'battery_power',\n"," 'px_width',\n"," 'px_height',\n"," 'mobile_wt',\n"," 'int_memory',\n"," 'n_cores',\n"," 'sc_h',\n"," 'sc_w',\n"," 'talk_time']"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["# Model Comparision"],"metadata":{"id":"2jcfXadfl5EX"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import cross_val_score"],"metadata":{"id":"DviwzEIko1Dw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the scores\n","def compare(X,y):\n","  model = LogisticRegression()\n","  model.fit(X,y)\n","\n","  # Perform 10-fold cross-validation\n","  scores = cross_val_score(model, X, y, cv=10)\n","  print(scores)\n","  print('Mean accuracy: ', scores.mean())\n","  print('Standard deviation: ', scores.std())"],"metadata":{"id":"Oub4pzU4vj2q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["compare(X,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-DCRqnxptQ_G","executionInfo":{"status":"ok","timestamp":1723569898379,"user_tz":-330,"elapsed":1025,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"90f455b9-626d-443f-bc26-a29f28baf11e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"stream","name":"stdout","text":["[0.595 0.65  0.65  0.67  0.66  0.655 0.6   0.67  0.635 0.62 ]\n","Mean accuracy:  0.6405000000000001\n","Standard deviation:  0.025831182706179005\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]}]},{"cell_type":"code","source":["compare(X[top_10],y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KYft0kBWwhuR","executionInfo":{"status":"ok","timestamp":1723569993145,"user_tz":-330,"elapsed":1222,"user":{"displayName":"JISHNU J S","userId":"10799669585572197011"}},"outputId":"243bef5b-f4f9-4986-b8f2-ee1b4971f685"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"stream","name":"stdout","text":["[0.595 0.645 0.655 0.655 0.64  0.64  0.585 0.665 0.63  0.61 ]\n","Mean accuracy:  0.632\n","Standard deviation:  0.025514701644346167\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"uJjcyhgoxu4l"},"execution_count":null,"outputs":[]}]}